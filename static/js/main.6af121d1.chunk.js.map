{"version":3,"sources":["components/SVGIMAGES/StarYellow.svg","components/SVGIMAGES/Stargrey.svg","components/Rating.jsx","components/ProductList.jsx","components/SVGIMAGES/MNGICON.svg","components/SVGIMAGES/CART.svg","components/SVGIMAGES/USER.svg","components/SVGIMAGES/hamburger.svg","components/Header.jsx","components/usewindowsize.jsx","components/images/mobile_background.png","components/images/background.png","components/FilterList.jsx","components/MyAccordion.jsx","components/SVGIMAGES/close_x_icon.svg","components/LeftSideBarFilter.jsx","components/Homescreen.jsx","components/LocationQuantity.jsx","components/ProductDetailScreen.jsx","components/SVGIMAGES/subtract.svg","components/SVGIMAGES/add.svg","components/CheckoutSummaryScreen.jsx","App.js","reportWebVitals.js","index.js"],"names":["Rating","props","ProdID","ReRating","useRef","Restars","count","Object","keys","Review","length","current","splice","i","ProductID","v","y","push","star","greystarcnt","z","className","map","staritems","src","StarYellow","width","height","StarGrey","ProductList","aPPLContext","useContext","APPLContext","ConList","ShowNoShowProductlist","e","to","onClick","ChangeShowNoShowProductlist","ShowNoShowProductDetail","ChangeShowNoShowProductDetail","process","LargePhotoFileName","alt","Name","ListPrice","Header","useState","searchText","setSearchText","MasterDataDetailList","data","setData","setState","excludeColumns","filterData","value","lowercasedValue","toLowerCase","trim","filteredData","filter","item","some","key","includes","toString","ChangeConList","hamburger","document","getElementById","sidenavidname","style","textDecoration","checkboxarray","ShowNoShowHomeScreen","ChangeShowNoShowHomeScreen","ShowNoShowcheckoutcontainer","ChangeShowNoShowcheckoutcontainer","marginLeft","type","placeholder","onChange","target","console","log","magfglass","user","cart","cartcounter","getWindowDimensions","window","innerWidth","innerHeight","useWindowDimensions","windowDimensions","setWindowDimensions","useEffect","handleResize","addEventListener","removeEventListener","FilterList","li","nm","checkboxvaluesarray","filteredlists","NewFilteredList","Accessories","Bikes","Clothing","Components","checkboxes","setcheckboxes","handleClick","event","arraysofstarlist","arraysofpricelist","arraysofcolorlist","onestarlist","twostarlist","threestarlist","fourstarlist","fivestarlist","masterstarlist","onepricelist","twopricelist","threepricelist","fourpricelist","fivepricelist","sixpricelist","sevenpricelist","masterpricelist","Silverlist","Blacklist","Yellowlist","Redlist","Whitelist","Bluelist","mastercolorlist","checked","name","index","indexOf","a","elem","parseInt","color","concat","ProductCategoryID","flat","FormControl","FormGroup","FormControlLabel","control","Checkbox","CategoryName","label","labelPlacement","priceId","price","MyAccordion","panel","classes","makeStyles","theme","root","background","position","rootExpanded","flexGrow","useStyles","list","expanded","setExpanded","rootClass","isExpanded","expandIcon","aria-controls","id","Typography","heading","LeftSideBarFilter","display","flexDirection","onLoad","xbutton","Changecheckboxarray","CategoryList","Homescreen","ShowNoShowApprootScreen","ChangeShowNoShowApprootScreen","backgroundImage","desktopbackground","backgroundRepeat","mobilebackground","LocationQuantity","qtycount","Quantityinfo","locnamecount","Location","locationqtinfo","foundLoactionName","LocationID","locid","qty","Quantity","JSON","stringify","ProductDetailScreen","product","find","x","match","params","category","class","SubcatName","description","TotalPrice","ChangeTotalPrice","Changecartcounter","rowid","cartitems","prodrowid","prodID","prodname","prodprice","onclickevent","CheckoutSummaryScreen","table","maxWidth","TableContainer","Table","aria-label","TableHead","TableRow","TableCell","component","scope","align","TableBody","row","sort","b","Changecartitems","additem","add","cnt","subtractitem","subtract","toFixed","React","createContext","LoadStarSwitch","ChangeLoadStarSwitch","Changesidenavidname","Changecheckboxes","App","setConList","setcartitems","setcartcounter","setLoadStarSwitch","setcheckboxarray","setTotalPrice","setShowNoShowProductlist","setShowNoShowProductDetail","setShowNoShowcheckoutcontainer","setShowNoShowHomeScreen","setShowNoShowApprootScreen","Provider","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.6af121d1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/StarYellow.1e9e90d1.svg\";","export default __webpack_public_path__ + \"static/media/Stargrey.3f9c2130.svg\";","import React,{useRef} from 'react'\r\nimport {APPLContext} from './../App'\r\nimport './rating.css'\r\nimport StarYellow from './SVGIMAGES/StarYellow.svg'\r\nimport StarGrey from './SVGIMAGES/Stargrey.svg'\r\nimport Review from '../json/MasterDetailListInfo.json'\r\n\r\nconst Rating = (props) => {\r\n    const {ProdID} = props\r\n    //console.log(ProdID)\r\n    \r\n    const ReRating = useRef()\r\n    const ReRatingStarYellow = useRef([])\r\n    const ReRatingStarGrey = useRef([])\r\n    const Restars = useRef([])\r\n    \r\n    //find total objects in json file -Review-\r\n    //and loop through until it finds a rating based on product id\r\n    let count = Object.keys(Review).length;\r\n    Restars.current.splice(0, Restars.current.length)\r\n    \r\n    for(var i = 0; i < count; i++) {\r\n       // console.log(i);\r\n        \r\n         if(ProdID === Review[i].ProductID){\r\n             \r\n            let v = 'Rating ' + Review[i].Rating + ' /5'\r\n            ReRating.current = v\r\n            \r\n            //store number of yellow star images to be printed out to screen\r\n            for(let y=0; y < Review[i].Rating; y++){\r\n            \r\n            Restars.current.push({ star:'yellow' })\r\n            //console.log(ReRatingStarYellow.current)\r\n            }\r\n            \r\n           // console.log('length of stars array = '+Restars.current.length)\r\n\r\n            //load grey stars if any to be loaded\r\n            let greystarcnt=5-Restars.current.length\r\n            for(let z=0; z < greystarcnt; z++){\r\n               \r\n               Restars.current.push({ star:'grey' })\r\n               //console.log('for loop ='+ (greystarcnt))\r\n              // console.log(Restars.current)\r\n               }\r\n            //console.log(ProdID + ' <> ' + Review[i].ProductID);\r\n            \r\n            break\r\n         }else{\r\n            ReRating.current ='No Rating'\r\n           \r\n         }\r\n\r\n    }\r\n   \r\n\r\n    return (\r\n      <div>\r\n      {ReRating.current} \r\n      <div className = 'stars'>\r\n      {Restars.current.map((staritems)=>{ \r\n                     if(staritems.star === 'yellow'){\r\n                     return ( \r\n                        <div className='star'>\r\n                        \r\n                        <img src={StarYellow} width='32px' height='32px'></img>\r\n                        </div>\r\n                     )}else{\r\n                        return ( \r\n                           <div className='Star'>\r\n                           \r\n                           <img src={StarGrey} width='32px' height='32px'></img>\r\n                           </div>\r\n                        )\r\n                     }\r\n                     \r\n                     ;})} \r\n            </div>\r\n           \r\n            </div> \r\n    )\r\n    \r\n}\r\n\r\nexport default Rating\r\n\r\n","import React,{useRef,useContext} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {APPLContext} from './../App'\r\nimport './ProductList.css'\r\nimport MasterDataDetailList from '../json/MasterDetailListInfo.json'\r\nimport Rating from './Rating'\r\n\r\n\r\nconst ProductList = () => {\r\n\r\nconst RefList = useRef()\r\n\r\nconst aPPLContext = useContext(APPLContext)\r\n\r\nconst ChangeDisplayofPage = () =>{\r\n    aPPLContext.ShowNoShowProductlist = 'dontshow'\r\n    aPPLContext.ChangeShowNoShowProductlist( aPPLContext.ShowNoShowProductlist)\r\n    aPPLContext.ShowNoShowProductDetail = 'Detail-Product-info'\r\n    aPPLContext.ChangeShowNoShowProductDetail( aPPLContext.ShowNoShowProductDetail)\r\n} \r\n    \r\n\r\n    if(aPPLContext.ConList.length>0){  \r\n    return (\r\n        <div className={aPPLContext.ShowNoShowProductlist}>\r\n           \r\n            {aPPLContext.ConList.map((e)=>{ \r\n                return (\r\n                <Link to={'/component/' + e.ProductID}>\r\n                <div  key={e.ProductID} className='Product' onClick={e => ChangeDisplayofPage()}>  \r\n                        \r\n                        <div className='Product-Image'>\r\n                        <img src={process.env.PUBLIC_URL + '/images/' + e.LargePhotoFileName} alt=\"image\" />\r\n                        </div>\r\n                        <div className='Product-Name'><h4>{e.Name}</h4></div>\r\n                        <div className='Product-Price'>${e.ListPrice}</div>\r\n                        <div className='Product-Rating'>\r\n                        \r\n                        <Rating ProdID={e.ProductID}/>\r\n                        </div>\r\n\r\n                </div>\r\n                </Link>\r\n         \r\n        );})}\r\n        \r\n        </div>\r\n    )\r\n    }else{\r\n        return(\r\n            <div className='No-Items-Returned'>\r\n                <p >Nothing found based on your search selections</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default ProductList\r\n\r\n","export default __webpack_public_path__ + \"static/media/MNGICON.058b7d1c.svg\";","export default __webpack_public_path__ + \"static/media/CART.90b5a8d2.svg\";","export default __webpack_public_path__ + \"static/media/USER.18e9862b.svg\";","export default __webpack_public_path__ + \"static/media/hamburger.32f8c346.svg\";","import React,{useState,useContext,useEffect} from 'react'\r\nimport './Header.css'\r\nimport {Link} from 'react-router-dom'\r\nimport {APPLContext} from './../App'\r\nimport MasterDataDetailList from '../json/MasterDetailListInfo.json'\r\nimport ProductList from'./ProductList'\r\nimport magfglass from './SVGIMAGES/MNGICON.svg'\r\nimport cart from './SVGIMAGES/CART.svg'\r\nimport user from './SVGIMAGES/USER.svg'\r\nimport hamburger from './SVGIMAGES/hamburger.svg'\r\n\r\nconst Header = () =>{\r\n    const aPPLContext = useContext(APPLContext)\r\n    const [searchText, setSearchText] = useState(\"\");\r\n    const [data, setData] = useState(MasterDataDetailList);\r\n    let  [,setState]=useState();\r\n    // exclude column list from filter\r\n    const excludeColumns = [\"ProductID\",\"description\", \"color\",\"ListPrice\",\"ProductPhotoID\",\"ProductSubcategoryID\",\"ProductCategoryID\",\"LargePhotoFileName\"];\r\n\r\n    // handle change event of search input\r\n    const handleChange = value => {\r\n        aPPLContext.checkboxarray.splice(0, aPPLContext.checkboxarray.length)\r\n        console.log(value)\r\n        setSearchText(value);\r\n        filterData(value);\r\n\r\n        //setscreens to show or not show\r\n        aPPLContext.ShowNoShowHomeScreen = 'dontshow'\r\n        aPPLContext.ChangeShowNoShowHomeScreen(aPPLContext.ShowNoShowHomeScreen)\r\n        aPPLContext.ShowNoShowProductDetail = 'dontshow'\r\n        aPPLContext.ChangeShowNoShowProductDetail(aPPLContext.ShowNoShowProductDetail)\r\n        aPPLContext.ShowNoShowcheckoutcontainer = 'dontshow'\r\n        aPPLContext.ChangeShowNoShowcheckoutcontainer(aPPLContext.ShowNoShowcheckoutcontainer)\r\n      \r\n        aPPLContext.ShowNoShowProductlist = 'Products-Container'\r\n        aPPLContext.ChangeShowNoShowProductlist(aPPLContext.ShowNoShowProductlist)\r\n        \r\n    };\r\n    const onclickevent = (value) =>{\r\n        filterData(value);\r\n        \r\n    };\r\n// \r\n   \r\n  \r\n  const resetlist = (e) =>{\r\n    aPPLContext.ChangeConList(MasterDataDetailList)\r\n    aPPLContext.checkboxarray.splice(0, aPPLContext.checkboxarray.length)\r\n    aPPLContext.ShowNoShowHomeScreen = 'homescreen-container-details'\r\n        aPPLContext.ChangeShowNoShowHomeScreen(aPPLContext.ShowNoShowHomeScreen)\r\n       \r\n        aPPLContext.ShowNoShowProductDetail = 'dontshow'\r\n        aPPLContext.ChangeShowNoShowProductDetail(aPPLContext.ShowNoShowProductDetail)\r\n        aPPLContext.ShowNoShowcheckoutcontainer = 'dontshow'\r\n        aPPLContext.ChangeShowNoShowcheckoutcontainer(aPPLContext.ShowNoShowcheckoutcontainer)\r\n        aPPLContext.ShowNoShowProductlist = 'dontshow'\r\n        aPPLContext.ChangeShowNoShowProductlist(aPPLContext.ShowNoShowProductlist)\r\n  }\r\n\r\n   \r\n    // filter records by search text\r\n    const filterData = (value) => {\r\n        const lowercasedValue = value.toLowerCase().trim();\r\n        if (lowercasedValue === \"\") setData(MasterDataDetailList);\r\n        else {\r\n        const filteredData = MasterDataDetailList.filter(item => {\r\n            return Object.keys(item).some(key =>\r\n            excludeColumns.includes(key) ? false : item[key].toString().toLowerCase().includes(lowercasedValue)\r\n            \r\n            );\r\n        });\r\n        setData(filteredData);\r\n        aPPLContext.ChangeConList(data)\r\n        }\r\n     }\r\n\r\n     \r\n     const openNav = () => {\r\n        setState({});\r\n        document.getElementById(aPPLContext.sidenavidname).style.width = \"270px\";\r\n        \r\n      }\r\n     const displaycheckoutScreen = () =>{\r\n        aPPLContext.ShowNoShowProductlist = 'dontshow'\r\n        aPPLContext.ChangeShowNoShowProductlist(aPPLContext.ShowNoShowProductlist)\r\n        aPPLContext.ShowNoShowcheckoutcontainer = 'checkoutListContainer'\r\n        aPPLContext.ChangeShowNoShowcheckoutcontainer(aPPLContext.ShowNoShowcheckoutcontainer)\r\n        aPPLContext.checkboxarray.splice(0, aPPLContext.checkboxarray.length)\r\n     }\r\n   \r\n\r\n    return(\r\n        <header className='HeaderContainer'>\r\n            <div className='hamburger' ><img src={hamburger} width='34px' height='34px'onClick={e=>openNav()}></img></div>\r\n            <Link to={'/'} style={{ textDecoration: 'none' }}>\r\n            <div className='CompanyName' onClick={e => resetlist(e)}> &nbsp; Some Bike shop Logo</div>\r\n            </Link>\r\n            \r\n                 \r\n                     <input className='SearchInputBox'\r\n                          style={{ marginLeft: 5 }}\r\n                          type=\"text\"\r\n                          placeholder=\"Type to search...\"\r\n                          value={searchText}\r\n                          onChange={e => handleChange(e.target.value)}\r\n                          \r\n                         \r\n                     />\r\n                      <div className='SearchMagnifingGlass'  onClick={e => onclickevent(searchText)}>\r\n                <img src={magfglass} width='32px' height='32px'></img>\r\n            </div>\r\n               \r\n            \r\n           \r\n            <div className='iconitemsContainer'>\r\n                <div className='UserAccountIcon'>\r\n                <img src={user} width='34px' height='35px'></img>\r\n                </div>\r\n                <div className='userAccountWord'>User Account</div>\r\n                <Link to={'/component'} style={{ textDecoration: 'none' }} onClick={() => displaycheckoutScreen()}>\r\n                <div className='shoppingCartIcon'>\r\n                <img src={cart} width='32px' height='32px'></img>\r\n                </div>\r\n                <div className='CheckoutWord'>Check Out</div>\r\n                <div className='Checkoutquanity'>{aPPLContext.cartcounter}</div>\r\n                </Link>\r\n            </div>\r\n            <div className=\"clearboth\">\r\n       \r\n        </div>\r\n        \r\n        </header>\r\n        \r\n    )\r\n}\r\nexport default Header","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/mobile_background.d83d41af.png\";","export default __webpack_public_path__ + \"static/media/background.fb979d98.png\";","import React,{useContext,useState,useRef} from 'react'\r\nimport {APPLContext} from './../App'\r\nimport MasterDataDetailList from '../json/MasterDetailListInfo.json'\r\nimport Review from '../json/Rating.json'\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport { ContactSupportOutlined } from '@material-ui/icons';\r\n\r\nconst  FilterList = (props) => {\r\n    const {li,nm}=props\r\n    const aPPLContext = useContext(APPLContext)\r\n    const [catary, setcatary] = useState(0);\r\n    const checkboxvaluesarray = useRef([])\r\n    const filteredlists = useRef([])\r\n    const NewFilteredList = useRef([])\r\n   \r\n    const checkboxRatvaluesarray = useRef([])\r\n    const filteredRatlists = useRef([])\r\n    const NewFilteredRatList = useRef([])\r\n    const tempRatList = useRef([])\r\n    let  [,setState]=useState();\r\n\r\n    const [checkboxes, setcheckboxes] = useState({\r\n        Accessories: false,\r\n        Bikes: false,\r\n        Clothing: false,\r\n        Components: false,\r\n      });\r\n    \r\n    const handleClick = (event) =>{\r\n        \r\n    //init all variables and arrays\r\n        let onestarlist=[]\r\n        let twostarlist=[]\r\n        let threestarlist=[]\r\n        let fourstarlist=[]\r\n        let fivestarlist=[]\r\n        let arraysofstarlist=[]\r\n        let masterstarlist=[]\r\n        let onepricelist=[]\r\n        let twopricelist=[]\r\n        let threepricelist=[]\r\n        let fourpricelist=[]\r\n        let fivepricelist=[]\r\n        let sixpricelist=[]\r\n        let sevenpricelist=[]\r\n        let arraysofpricelist=[]\r\n        let masterpricelist=[]\r\n        let Silverlist=[]\r\n        let Blacklist=[]\r\n        let Yellowlist=[]\r\n        let Redlist=[]\r\n        let Whitelist=[]\r\n        let Bluelist=[]\r\n        let arraysofcolorlist=[]\r\n        let mastercolorlist=[]\r\n        let OneStarflag=false\r\n        let TwoStarflag=false\r\n        let ThreeStarflag=false\r\n        let FourStarflag=false\r\n        let FiveStarflag=false\r\n\r\n        let e=event\r\n\r\n        const target = event.target;\r\n\r\n        let value = target.value;\r\n\r\n        \r\n        //store checked value in array\r\n        if(target.checked){\r\n            setcheckboxes({ ...checkboxes, [target.name]: target.checked })\r\n            checkboxvaluesarray.current.push(value) \r\n            aPPLContext.checkboxarray.push(value)\r\n            console.log(checkboxvaluesarray.current)  \r\n            console.log('contextarray='+ aPPLContext.checkboxarray)\r\n            target.checked = true\r\n        }else{\r\n            // remove value from array when unchecked\r\n                 \r\n                 setcheckboxes({ ...checkboxes, [target.name]: target.checked=false})\r\n                 const index = aPPLContext.checkboxarray.indexOf(value);\r\n                 target.checked = false\r\n                if (index > -1) {\r\n                    \r\n                    console.log('this target unchecked ' + target.checked )\r\n                    checkboxvaluesarray.current.splice(index, 1);\r\n                    filteredlists.current.splice(index,1)\r\n                    aPPLContext.checkboxarray.splice(index, 1);\r\n                    console.log('contextarray='+ aPPLContext.checkboxarray)\r\n                    setState({});\r\n                }\r\n           \r\n          \r\n        }\r\n        \r\n\r\n        //create lists based on what has been checked \r\n        for(let a=0; a < aPPLContext.checkboxarray.length; a++){\r\n            \r\n            \r\n            if(aPPLContext.checkboxarray[a]==='R1'){\r\n                onestarlist = MasterDataDetailList.filter(elem => parseInt(elem.Rating) === 1)\r\n                //console.log('onestar = '+onestarlist)\r\n                OneStarflag = true\r\n            }\r\n            //list of all products for two star rating\r\n            \r\n            if(aPPLContext.checkboxarray[a]==='R2'){\r\n                twostarlist= MasterDataDetailList.filter(elem => parseInt(elem.Rating) === 2)\r\n               // console.log('twostar = '+twostarlist)\r\n                TwoStarflag = true\r\n                \r\n            }\r\n            if(aPPLContext.checkboxarray[a]==='R3'){\r\n                threestarlist= MasterDataDetailList.filter(elem => parseInt(elem.Rating) === 3)\r\n               // console.log('twostar = '+threestarlist)\r\n                ThreeStarflag = true\r\n                \r\n            }\r\n            if(aPPLContext.checkboxarray[a]==='R4'){\r\n                fourstarlist= MasterDataDetailList.filter(elem => parseInt(elem.Rating) === 4)\r\n               // console.log('twostar = '+fourstarlist)\r\n                FourStarflag = true\r\n                \r\n            }\r\n            if(aPPLContext.checkboxarray[a]==='R5'){\r\n                fivestarlist= MasterDataDetailList.filter(elem => parseInt(elem.Rating) === 5)\r\n               // console.log('twostar = '+fivestarlist)\r\n                FiveStarflag = true\r\n                \r\n            }\r\n            if(aPPLContext.checkboxarray[a]==='P1'){\r\n                onepricelist= MasterDataDetailList.filter(elem => parseInt(elem.ListPrice) > 0 &&  parseInt(elem.ListPrice) <=50)\r\n               // console.log('onepricelist = '+onepricelist)\r\n               \r\n                \r\n            }\r\n            if(aPPLContext.checkboxarray[a]==='P2'){\r\n                twopricelist= MasterDataDetailList.filter(elem => parseInt(elem.ListPrice) > 49 &&  parseInt(elem.ListPrice) <=100)\r\n               // console.log('onepricelist = '+twopricelist)\r\n                \r\n                \r\n            }\r\n            if(aPPLContext.checkboxarray[a]==='P3'){\r\n                threepricelist= MasterDataDetailList.filter(elem => parseInt(elem.ListPrice) > 100 &&  parseInt(elem.ListPrice) <=1000)\r\n                //console.log('onepricelist = '+threepricelist)\r\n                \r\n                \r\n            }\r\n            if(aPPLContext.checkboxarray[a]==='P4'){\r\n                fourpricelist= MasterDataDetailList.filter(elem => parseInt(elem.ListPrice) > 1000 &&  parseInt(elem.ListPrice) <=2000)\r\n               // console.log('onepricelist = '+fourpricelist)\r\n                \r\n                \r\n            }\r\n            if(aPPLContext.checkboxarray[a]==='P5'){\r\n                fivepricelist= MasterDataDetailList.filter(elem => parseInt(elem.ListPrice) > 2000 &&  parseInt(elem.ListPrice) <=3000)\r\n               // console.log('onepricelist = '+fivepricelist)\r\n                \r\n                \r\n            }\r\n            if(aPPLContext.checkboxarray[a]==='P6'){\r\n                sixpricelist= MasterDataDetailList.filter(elem => parseInt(elem.ListPrice) > 3000 &&  parseInt(elem.ListPrice) <=4000)\r\n               // console.log('onepricelist = '+sixpricelist)\r\n                \r\n                \r\n            }\r\n            if(aPPLContext.checkboxarray[a]==='P7'){\r\n                sevenpricelist= MasterDataDetailList.filter(elem => parseInt(elem.ListPrice) > 4000 &&  parseInt(elem.ListPrice) <=5000)\r\n               // console.log('onepricelist = '+sevenpricelist)\r\n                \r\n                \r\n            }\r\n            if(aPPLContext.checkboxarray[a]==='Silver'){\r\n                Silverlist= MasterDataDetailList.filter(elem => elem.color === 'Silver')\r\n               // console.log('onepricelist = '+Silverlist)\r\n               \r\n            }\r\n            if(aPPLContext.checkboxarray[a]==='Black'){\r\n                Blacklist= MasterDataDetailList.filter(elem => elem.color === 'Black')\r\n              //  console.log('onepricelist = '+Blacklist)\r\n              \r\n            }\r\n            if(aPPLContext.checkboxarray[a]==='Yellow'){\r\n                Yellowlist= MasterDataDetailList.filter(elem => elem.color === 'Yellow')\r\n              //  console.log('onepricelist = '+Yellowlist)\r\n              \r\n            }\r\n            if(aPPLContext.checkboxarray[a]==='Red'){\r\n                Redlist= MasterDataDetailList.filter(elem => elem.color === 'Red')\r\n              //  console.log('onepricelist = '+Redlist)\r\n              \r\n            }\r\n            if(aPPLContext.checkboxarray[a]==='White'){\r\n                Whitelist= MasterDataDetailList.filter(elem => elem.color === 'White')\r\n              //  console.log('onepricelist = '+Whitelist)\r\n              \r\n            }\r\n            if(aPPLContext.checkboxarray[a]==='Blue'){\r\n                Bluelist= MasterDataDetailList.filter(elem => elem.color === 'Blue')\r\n             //   console.log('onepricelist = '+Bluelist)\r\n              \r\n            }\r\n\r\n        }\r\n\r\n        //build new arrays of starlists\r\n        arraysofstarlist=[\r\n        onestarlist,\r\n        twostarlist,\r\n        threestarlist,\r\n        fourstarlist,\r\n        fivestarlist\r\n        ]\r\n\r\n        arraysofpricelist=[\r\n        onepricelist,\r\n        twopricelist,\r\n        threepricelist,\r\n        fourpricelist,\r\n        fivepricelist,\r\n        sixpricelist,\r\n        sevenpricelist,\r\n        ]\r\n\r\n\r\n        arraysofcolorlist=[\r\n        Silverlist,\r\n        Blacklist,\r\n        Yellowlist,\r\n        Redlist,\r\n        Whitelist,\r\n        Bluelist,\r\n        ]\r\n        \r\n        //build the different lists\r\n        mastercolorlist=[].concat(...arraysofcolorlist);\r\n        \r\n        masterpricelist=[].concat(...arraysofpricelist);\r\n        masterstarlist =[].concat(...arraysofstarlist);\r\n        \r\n        console.log(masterstarlist)\r\n\r\n        if(masterstarlist.length === 0 ){\r\n        //get and store the different lists for categories based around a star rating or no star rating\r\n                    for(let z=0; z < aPPLContext.checkboxarray.length; z++){\r\n                        filteredlists.current[z] = MasterDataDetailList.filter(elem => parseInt(elem.ProductCategoryID) === parseInt(aPPLContext.checkboxarray[z]))\r\n                       \r\n                        }\r\n                    //filter catorgorys by price\r\n                    if(masterpricelist.length > 0) {\r\n                        for(let z=0; z < aPPLContext.checkboxarray.length; z++){\r\n                            filteredlists.current[z] = masterpricelist.filter(elem => parseInt(elem.ProductCategoryID) === parseInt(aPPLContext.checkboxarray[z]))\r\n                           // console.log('stored lists = '+filteredlists.current[0])\r\n                           \r\n                        }\r\n                    }\r\n\r\n                    //filter catorgories by color\r\n                    if(mastercolorlist.length > 0) {\r\n                        for(let z=0; z < aPPLContext.checkboxarray.length; z++){\r\n                            filteredlists.current[z] = mastercolorlist.filter(elem => parseInt(elem.ProductCategoryID) === parseInt(aPPLContext.checkboxarray[z]))\r\n                           // console.log('stored lists = '+filteredlists.current[0])\r\n                           \r\n                        }\r\n                    }\r\n            }else{\r\n                // filter list on the starrating list\r\n                for(let z=0; z < aPPLContext.checkboxarray.length; z++){\r\n                    filteredlists.current[z] = masterstarlist.filter(elem => parseInt(elem.ProductCategoryID) === parseInt(aPPLContext.checkboxarray[z]))\r\n                   // console.log('stored lists of star = '+filteredlists.current[0])\r\n                }\r\n            } \r\n            console.log('contextarrayend of loop='+ aPPLContext.checkboxarray)      \r\n        //build new filtered list based on stored lists in array\r\n        NewFilteredList.current=filteredlists.current.flat()\r\n\r\n        //display default list if nothing selected from all filter boxes\r\n        if(NewFilteredList.current.length === 0 && aPPLContext.checkboxarray.length === 0){\r\n            NewFilteredList.current = MasterDataDetailList\r\n            \r\n        }\r\n\r\n     \r\n       //set new list to be displayed\r\n        aPPLContext.ChangeConList(NewFilteredList.current)\r\n        \r\n\r\n        //set screens to be displayed or not displayed\r\n        aPPLContext.ShowNoShowHomeScreen = 'dontshow'\r\n        aPPLContext.ChangeShowNoShowHomeScreen(aPPLContext.ShowNoShowHomeScreen)\r\n       \r\n        aPPLContext.ShowNoShowProductDetail = 'dontshow'\r\n        aPPLContext.ChangeShowNoShowProductDetail(aPPLContext.ShowNoShowProductDetail)\r\n        aPPLContext.ShowNoShowcheckoutcontainer = 'dontshow'\r\n        aPPLContext.ChangeShowNoShowcheckoutcontainer(aPPLContext.ShowNoShowcheckoutcontainer)\r\n        aPPLContext.ShowNoShowProductlist = 'Products-Container'\r\n        aPPLContext.ChangeShowNoShowProductlist(aPPLContext.ShowNoShowProductlist)\r\n        console.log(aPPLContext.ShowNoShowProductlist)\r\n        \r\n        \r\n    } \r\n\r\n    \r\n\r\n    if(nm==='Catorgory'){\r\n    return (\r\n        <div>\r\n            <FormControl>\r\n              <FormGroup>\r\n              {li.map(item=>{\r\n                   return <FormControlLabel\r\n                    value={item.ProductCategoryID}\r\n                    control={<Checkbox color=\"primary\" checked={checkboxes.CategoryName}/>}\r\n                    label={item.CategoryName}\r\n                    labelPlacement=\"end\"\r\n                    onClick={e => handleClick(e)}\r\n                    \r\n                    />\r\n\r\n        })}\r\n             <button onClick={e => handleClick(e)}>search</button>   \r\n             </FormGroup>\r\n            </FormControl>\r\n        </div>\r\n    )\r\n    }\r\n\r\n    if(nm==='Rating'){\r\n        return (\r\n            <div>\r\n                <FormControl>\r\n                  <FormGroup>\r\n                  {li.map(item=>{\r\n                       return <FormControlLabel\r\n                        value={'R'+item.Rating}\r\n                        control={<Checkbox color=\"primary\" />}\r\n                        label={item.Rating +'/5'} \r\n                        labelPlacement=\"end\"\r\n                        onClick={e => handleClick(e)}\r\n                        />\r\n    \r\n            })}\r\n                     <button onClick={e => handleClick(e)}>search</button>\r\n                 </FormGroup>\r\n                </FormControl>\r\n            </div>\r\n        )\r\n        }\r\n\r\n        if(nm==='Price'){\r\n            return (\r\n                <div>\r\n                    <FormControl>\r\n                      <FormGroup>\r\n                      {li.map(item=>{\r\n                           return <FormControlLabel\r\n                            value={'P'+item.priceId}\r\n                            control={<Checkbox color=\"primary\" />}\r\n                            label={item.price} \r\n                            labelPlacement=\"end\"\r\n                            onClick={e => handleClick(e)}\r\n                            />\r\n        \r\n                })}\r\n                         <button onClick={e => handleClick(e)}>search</button>\r\n                     </FormGroup>\r\n                    </FormControl>\r\n                </div>\r\n            )\r\n            }\r\n            if(nm==='Color'){\r\n            return (\r\n                <div>\r\n                    <FormControl>\r\n                      <FormGroup>\r\n                      {li.map(item=>{\r\n                           return <FormControlLabel\r\n                            value={item.color}\r\n                            control={<Checkbox color=\"primary\" />}\r\n                            label={item.color} \r\n                            labelPlacement=\"end\"\r\n                            onClick={e => handleClick(e)}\r\n                            />\r\n        \r\n                })}\r\n                         <button onClick={e => handleClick(e)}>search</button>\r\n                     </FormGroup>\r\n                    </FormControl>\r\n                </div>\r\n            )\r\n            }\r\n        return(\r\n            null\r\n        )\r\n    \r\n}\r\n\r\nexport default FilterList\r\n","import React,{useState} from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Accordion from '@material-ui/core/ExpansionPanel';\r\nimport AccordionSummary from '@material-ui/core/ExpansionPanelSummary';\r\nimport AccordionDetails from '@material-ui/core/ExpansionPanelDetails';\r\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport FilterList from './FilterList'\r\n\r\n\r\nconst MyAccordion =(props)=> {\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          width: \"100%\",\r\n          background: \"rgb(98, 62, 21)\",\r\n          color: \"white\",\r\n          position: \"relative\"\r\n        },\r\n        rootExpanded: {\r\n          background: \"rgb(98, 62, 21)\",\r\n          flexGrow: .3,\r\n          color: \"white\",\r\n          position: \"relative\"\r\n        }\r\n      }));\r\n\r\n      const classes = useStyles();\r\n  const { name,list } = props;\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  //toggle the filter to expand or close\r\n  const rootClass = expanded ? classes.rootExpanded : classes.root;\r\n\r\n  const handleChange = (panel) => (event, isExpanded) => {\r\n    setExpanded(isExpanded ? panel : false);\r\n  };\r\n\r\n  return (\r\n    <Accordion\r\n      className={rootClass}\r\n      expanded={expanded === name}\r\n      onChange={handleChange(name)}\r\n    >\r\n      <AccordionSummary\r\n        expandIcon={<ExpandMoreIcon />}\r\n        aria-controls=\"panel1bh-content\"\r\n        id={`${name}-header`}\r\n      >\r\n        <Typography className={classes.heading}>{name}</Typography>\r\n        \r\n      </AccordionSummary>\r\n      <AccordionDetails>\r\n        <Typography>\r\n          \r\n            <FilterList li={list} nm={name}/>\r\n         \r\n        </Typography>\r\n      </AccordionDetails>\r\n    </Accordion>\r\n  );\r\n   \r\n}\r\n\r\nexport default MyAccordion\r\n","export default __webpack_public_path__ + \"static/media/close_x_icon.29cb5938.svg\";","import React,{useState,useContext,useEffect} from 'react'\r\nimport {APPLContext} from './../App'\r\nimport useWindowDimensions from './usewindowsize'\r\nimport CategoryList from '../json/CategoryList.json'\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport SubCategoryList from '../json/SubCategoryList.json'\r\n//import MasterList from '../json/MasterDetailList.json'\r\nimport MyAccordion from \"./MyAccordion.jsx\";\r\nimport xbutton from './SVGIMAGES/close_x_icon.svg'\r\nimport './LeftSideBarFilter.css'\r\nimport { ContactSupportOutlined } from '@material-ui/icons';\r\n\r\n\r\nconst  LeftSideBarFilter = () => {\r\n  let  [,setState]=useState();\r\n  const { height, width } = useWindowDimensions();\r\n  const aPPLContext = useContext(APPLContext)\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n          width: \"220px\",\r\n          background: 'rgb(148, 123, 123)',\r\n          height: \"25vh\",\r\n          display: \"flex\",\r\n          flexDirection: \"column\"\r\n        }\r\n      }));\r\n\r\n      const ratinglist = [{\r\n                            \"StarId\" : 1,\r\n                            \"Rating\" : 1,\r\n                          },\r\n                          {\r\n                            \"StarId\" : 2,\r\n                            \"Rating\" : 2,\r\n                          },\r\n                          {\r\n                            \"StarId\" : 3,\r\n                            \"Rating\" : 3,\r\n                          },\r\n                          {\r\n                            \"StarId\" : 4,\r\n                            \"Rating\" : 4,\r\n                          },\r\n                          {\r\n                            \"StarId\" : 5,\r\n                            \"Rating\" : 5,\r\n                          },\r\n\r\n\r\n                        ]\r\n\r\n\r\n\r\n    const Pricelist = [{\r\n                            \"priceId\" : 1,\r\n                            \"price\" : '$0.00 - $49.99',\r\n                          },\r\n                          {\r\n                            \"priceId\" : 2,\r\n                            \"price\" : '$50.00 - $99.99',\r\n                          },\r\n                          {\r\n                            \"priceId\" : 3,\r\n                            \"price\" : '$100.00 - $1000',\r\n                          },\r\n                          {\r\n                            \"priceId\" : 4,\r\n                            \"price\" : '$1000.00 - $2000',\r\n                          },\r\n                          {\r\n                            \"priceId\" : 5,\r\n                            \"price\" : '$2000.00 - $3000',\r\n                          },\r\n                          {\r\n                            \"priceId\" : 6,\r\n                            \"price\" : '$3000.00 - $4000',\r\n                          },\r\n                          {\r\n                            \"priceId\" : 7,\r\n                            \"price\" : '$4000.00 - $5000',\r\n                          },\r\n\r\n\r\n                        ]\r\n\r\n                        const Colorlist = [{\r\n                            \"colorId\" : 1,\r\n                            \"color\" : 'Silver',\r\n                          },\r\n                          {\r\n                            \"colorId\" : 2,\r\n                            \"color\" : 'Black',\r\n                          },\r\n                          {\r\n                            \"colorId\" : 3,\r\n                            \"color\" : 'Yellow',\r\n                          },\r\n                          {\r\n                            \"colorId\" : 4,\r\n                            \"color\" : 'Red',\r\n                          },\r\n                          {\r\n                            \"colorId\" : 5,\r\n                            \"color\" : 'White',\r\n                          },\r\n                          {\r\n                            \"colorId\" : 6,\r\n                            \"color\" : 'Blue',\r\n                          },\r\n                          \r\n\r\n\r\n                        ]\r\n      const classes = useStyles();\r\n\r\n      const unCheck = () => {\r\n        \r\n     //   let b = document.getElementsByClassName(\"PrivateSwitchBase-input-10\");\r\n        \r\n     //   for(let i=0; i<b.length; i++) {\r\n     //     console.log('indexvalue = ' + b[i] + ' = '+ b[i].checked)\r\n     //   b[i].checked = false;\r\n       \r\n     //   }  \r\n    \r\n    //    aPPLContext.checkboxes.Accessories = false\r\n     // let value = aPPLContext.checkboxes.Accessories\r\n     //   console.log(value)\r\n      //  aPPLContext.Changecheckboxes(value)\r\n      //  aPPLContext.checkboxarray.splice(0, aPPLContext.checkboxarray.length)\r\n       \r\n    }\r\n\r\n      const closeNav = () =>{\r\n        setState({});\r\n        \r\n        unCheck()\r\n        document.getElementById(aPPLContext.sidenavidname).style.width = \"0px\";\r\n        console.log('closing sidenav')\r\n        \r\n        aPPLContext.checkboxarray = aPPLContext.checkboxarray\r\n        aPPLContext.Changecheckboxarray =(aPPLContext.checkboxarray)\r\n        \r\n      }\r\n\r\n      const checkwidth = () =>{\r\n      if(width > 415){\r\n        setState({});\r\n        \r\n        document.getElementById(aPPLContext.sidenavidname).style.width = \"240px\"; \r\n             \r\n        console.log('checking width')\r\n      }\r\n    }\r\n\r\n   // useEffect(() => {\r\n   //   checkwidth()\r\n      \r\n   // }, [])\r\n    \r\n\r\n    return (\r\n        <div id={aPPLContext.sidenavidname} onLoad={()=>checkwidth()}>\r\n        \r\n             <div className='closebutton' ><img src={xbutton} width='34px' height='34px' onClick={e=>closeNav()}></img></div>\r\n                <div className={classes.root}>\r\n                    <MyAccordion name=\"Catorgory\" list = {CategoryList}/>\r\n                    <MyAccordion name=\"Rating\" list ={ratinglist}/>\r\n                    <MyAccordion name=\"Price\" list={Pricelist}/>\r\n                    <MyAccordion name=\"Color\" list={Colorlist}/>\r\n                   \r\n                    </div>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeftSideBarFilter\r\n","import React,{useContext,useState} from 'react'\r\nimport {APPLContext} from './../App'\r\nimport useWindowDimensions from './usewindowsize'\r\nimport Header from './Header'\r\nimport mobilebackground from './images/mobile_background.png'\r\nimport desktopbackground from './images/background.png'\r\n\r\nimport './homescreen.css'\r\nimport LeftSideBarFilter from './LeftSideBarFilter'\r\nimport ProductList from'./ProductList'\r\n\r\nconst Homescreen = () => {\r\n    //console.log('in homescreen')\r\n    const aPPLContext = useContext(APPLContext)\r\n    const { height, width } = useWindowDimensions();\r\n    aPPLContext.ShowNoShowApprootScreen='dontshow'\r\n    aPPLContext.ChangeShowNoShowApprootScreen(aPPLContext.ShowNoShowApprootScreen)\r\n    console.log(width)\r\n    if(width > 425){\r\n    return (\r\n        <div className='homescreen-container'>\r\n            \r\n            <Header/>\r\n            <LeftSideBarFilter/>\r\n            <ProductList/>\r\n            <div className={aPPLContext.ShowNoShowHomeScreen} style={{ backgroundImage: `url(${desktopbackground})`,backgroundRepeat: 'no-repeat' }}>\r\n                       <div className='title'>\r\n                       <h1>Best Bike shop on the planet</h1>\r\n                       </div>\r\n            </div>\r\n            \r\n            \r\n        </div>\r\n    )\r\n    }else{\r\n        return (\r\n            <div className='homescreen-container'>\r\n                \r\n                <Header/>\r\n                <LeftSideBarFilter/>\r\n                <ProductList/>\r\n                <div className={aPPLContext.ShowNoShowHomeScreen} style={{ backgroundImage: `url(${mobilebackground})`,backgroundRepeat: 'no-repeat' }}>\r\n                <div className='title'>\r\n                       <h1>Best Bike shop on the planet</h1>\r\n                       </div>\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Homescreen\r\n\r\n","import React from 'react'\r\nimport Quantityinfo from '../json/LoactionQuantity.json'\r\nimport Location from '../json/LoactionName.json'\r\n\r\nconst LocationQuantity = (props) => {\r\n\r\n    const {ProdID} = props\r\n        \r\n    let qtycount = Object.keys(Quantityinfo).length;\r\n    let locnamecount = Object.keys(Location).length;\r\n    let locationqtinfo = []\r\n    let foundLoactionName =''\r\n    let jsonArrData=''\r\n   \r\n    //look for productid in quantity info json file\r\n    for(var i = 0; i < qtycount; i++) {\r\n      \r\n        //if product exist in quantity json file look for Locationid and get the name\r\n         if(ProdID === Quantityinfo[i].ProductID){\r\n\r\n            \r\n            for(var z = 0; z < locnamecount; z++) {\r\n                    if(Quantityinfo[i].LocationID === Location[z].LocationID){\r\n                        foundLoactionName = Location[z].Name\r\n                       // console.log('made it here')\r\n                    }\r\n\r\n            }\r\n             \r\n            //build new array with with qty and loaction name\r\n            locationqtinfo.push({ locid:Quantityinfo[i].LocationID,qty:Quantityinfo[i].Quantity, Name:foundLoactionName })\r\n              \r\n            //converts array to json format - is not used in program for reference only\r\n              jsonArrData = JSON.stringify(locationqtinfo)\r\n\r\n         }\r\n\r\n    }\r\n   //check to see if there is 0 qty in the locationqtinfo array\r\n    if(locationqtinfo.length === 0){\r\n        console.log(locnamecount)\r\n        return(\r\n            <div>\r\n            Qty on hand: 0\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n        <div>\r\n        Qty on hand:\r\n          {locationqtinfo.map((locationqtinfo)=>{ \r\n                return ( \r\n                    <div>\r\n                    &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{locationqtinfo.Name} : {locationqtinfo.qty}\r\n                   \r\n                    </div>\r\n                );})}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default LocationQuantity\r\n","import React,{useContext,useState} from 'react'\r\nimport {APPLContext} from './../App'\r\nimport Header from './Header'\r\nimport LeftSideBarFilter from './LeftSideBarFilter'\r\nimport LocationQuantity from './LocationQuantity'\r\nimport MasterDataDetailList from '../json/MasterDetailListInfo.json'\r\nimport CategoryList from '../json/CategoryList.json'\r\nimport './ProductDetailScreen.css'\r\nimport ProductList from'./ProductList'\r\nimport SubCategoryList from '../json/SubCategoryList.json'\r\nimport FilterList from './FilterList'\r\n\r\nimport Rating from './Rating'\r\n\r\nconst ProductDetailScreen = (props) => {\r\n    let  [,setState]=useState();\r\n  //gets parms from url string and props\r\n  //props.match.params.id\r\n  const aPPLContext = useContext(APPLContext)\r\n    const product = MasterDataDetailList.find(x => x.ProductID === parseInt(props.match.params.id))\r\n    const category = CategoryList.find(y=>y.ProductCategoryID === product.ProductCategoryID)\r\n    //aPPLContext.checkboxarray.splice(0, aPPLContext.checkboxarray.length)\r\n    console.log(category.CategoryName)\r\n    \r\n    \r\n    \r\n\r\n    const onclickevent =()=>{\r\n        aPPLContext.cartcounter = aPPLContext.cartcounter + 1\r\n        aPPLContext.TotalPrice = aPPLContext.TotalPrice + product.ListPrice\r\n        aPPLContext.checkboxarray.splice(0, aPPLContext.checkboxarray.length)\r\n        aPPLContext.ChangeTotalPrice(aPPLContext.TotalPrice)\r\n        aPPLContext.Changecartcounter(aPPLContext.cartcounter)\r\n        console.log(aPPLContext.cartcounter)\r\n        let lengtharry=aPPLContext.cartitems.length\r\n        let rowid = lengtharry + 1\r\n        aPPLContext.cartitems.push({prodrowid:rowid, prodID:product.ProductID,prodname:product.Name, prodprice:product.ListPrice })\r\n        console.log(aPPLContext.cartitems)   \r\n        setState({});\r\n    }\r\n    return(\r\n        <div>\r\n            \r\n            <Header/>\r\n            <LeftSideBarFilter/>\r\n            <ProductList/>\r\n            <main>\r\n            <section class={aPPLContext.ShowNoShowProductDetail}>\r\n                <ul>\r\n                <li className>\r\n                    <figure>\r\n                    <img src={process.env.PUBLIC_URL + '/images/' + product.LargePhotoFileName} alt=\"image\" />\r\n                    </figure>\r\n              \r\n                </li>\r\n                <li>\r\n                <div className='Detail-Product-name'>Product ID: {product.ProductID}</div>\r\n                    <div className='Detail-Product-name'>Name: {product.Name}</div>\r\n                    <div className='Detail-Product-color'>Category : {category.CategoryName}</div>\r\n                    <div className='Detail-Product-color'>Sub Category : {product.SubcatName}</div>\r\n                 \r\n                    <div className='Detail-Product-color'>Color  : {product.color}</div>\r\n                    <div><p> </p></div>\r\n                    <div className='Detail-Product-color'>Description : {product.description}</div>\r\n                    <div><p> </p></div>\r\n                    <div className='Detail-Product-color'><Rating ProdID={product.ProductID}/></div>\r\n                   \r\n                </li>\r\n                <li>\r\n                    <div>\r\n                    <div className='Detail-Product-name'>Price: ${product.ListPrice}</div>\r\n                    <div className='cartbutton' onClick={() => onclickevent()} >Add to cart</div>\r\n                    <LocationQuantity ProdID={product.ProductID}/>\r\n                    \r\n                    </div>\r\n                </li>\r\n                </ul>\r\n                </section>\r\n                </main>\r\n        </div>\r\n    )\r\n   \r\n}\r\n\r\nexport default ProductDetailScreen\r\n","export default __webpack_public_path__ + \"static/media/subtract.1c5e61b1.svg\";","export default __webpack_public_path__ + \"static/media/add.76ef7be6.svg\";","import React,{useContext,useRef} from 'react'\r\nimport {APPLContext} from './../App'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport LeftSideBarFilter from './LeftSideBarFilter'\r\nimport ProductList from'./ProductList'\r\nimport './CheckoutSummaryScreen.css'\r\nimport Header from './Header'\r\nimport subtract from './SVGIMAGES/subtract.svg'\r\nimport add from './SVGIMAGES/add.svg'\r\nimport { PlayCircleFilledWhite } from '@material-ui/icons';\r\n\r\nconst CheckoutSummaryScreen =()=> {\r\n    const aPPLContext = useContext(APPLContext)\r\n    const totalprice = useRef(0)\r\n    aPPLContext.ShowNoShowApprootScreen='dontshow'\r\n    aPPLContext.ChangeShowNoShowApprootScreen(aPPLContext.ShowNoShowApprootScreen)\r\n  \r\n const useStyles = makeStyles({\r\n        table: {\r\n          maxWidth: 90,\r\n          background: 'White',\r\n        },\r\n      });\r\n   \r\n\r\n    const classes = useStyles();\r\n   \r\n\r\n    //add an item to the list\r\n    const additem = (prodID,prodprice,prodname) =>{\r\n        console.log('adding' + prodID)\r\n\r\n\r\n\r\n        aPPLContext.cartcounter = aPPLContext.cartcounter + 1\r\n        aPPLContext.TotalPrice = aPPLContext.TotalPrice + prodprice\r\n        \r\n        aPPLContext.ChangeTotalPrice(aPPLContext.TotalPrice)\r\n        aPPLContext.Changecartcounter(aPPLContext.cartcounter)\r\n      //  console.log(aPPLContext.cartcounter)\r\n      let lengtharry=aPPLContext.cartitems.length\r\n        let rowid = lengtharry + 1\r\n        aPPLContext.cartitems.push({prodrowid:rowid, prodID:prodID,prodname:prodname, prodprice:prodprice })\r\n        aPPLContext.cartitems.sort(function (a, b) {\r\n            return a.prodID - b.prodID;\r\n          });\r\n        aPPLContext.Changecartitems(aPPLContext.cartitems)\r\n     \r\n\r\n\r\n    }\r\n\r\n    //subtract item from the list\r\n    const subtractitem = (prodID,prodprice) =>{\r\n        console.log('subtracting' + prodID)\r\n\r\n\r\n        var index = aPPLContext.cartitems.map(x => {\r\n            return x.prodID;\r\n            \r\n          }).indexOf(prodID);\r\n          \r\n          aPPLContext.cartitems.splice(index, 1);\r\n         let cnt = 0\r\n          for(let a=0; a<aPPLContext.cartitems.length; a++){\r\n              \r\n              cnt = cnt + 1\r\n              console.log('cnt='+cnt+' === '+ aPPLContext.cartitems[a].prodrowid)\r\n           \r\n                aPPLContext.cartitems[a].prodrowid = cnt; \r\n                console.log(aPPLContext.cartitems)\r\n            \r\n          }\r\n\r\n          aPPLContext.Changecartitems(aPPLContext.cartitems)\r\n        aPPLContext.cartcounter = aPPLContext.cartcounter - 1\r\n        aPPLContext.Changecartcounter(aPPLContext.cartcounter)\r\n        aPPLContext.TotalPrice = aPPLContext.TotalPrice - prodprice\r\n       // console.log(aPPLContext.cartitems);\r\n        aPPLContext.ChangeTotalPrice(aPPLContext.TotalPrice)\r\n       // aPPLContext.Changecartcounter(aPPLContext.cartcounter)\r\n       // console.log(aPPLContext.cartcounter)\r\n       // aPPLContext.cartitems.push({ prodID:product.ProductID,prodname:product.Name, prodprice:product.ListPrice })\r\n       \r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className='checkoutcontainer'>\r\n            <Header/>\r\n            <LeftSideBarFilter/>\r\n            <ProductList/>\r\n            <div className={aPPLContext.ShowNoShowcheckoutcontainer}>\r\n\r\n            <h1>Payment Summary</h1><br></br>\r\n            <TableContainer >\r\n      <Table className={classes.table} aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell component=\"th\" scope=\"row\" align=\"left\">ProductID</TableCell>\r\n            <TableCell align=\"left\">Description</TableCell>\r\n            <TableCell align=\"left\">Price &nbsp;$</TableCell>\r\n            \r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {aPPLContext.cartitems.map((row) => (\r\n              \r\n            <TableRow key={row.prodrowid}>\r\n              \r\n              <TableCell align=\"left\">{row.prodID}</TableCell>\r\n              <TableCell align=\"left\">{row.prodname}</TableCell>\r\n              <TableCell align=\"left\">{row.prodprice}</TableCell>\r\n              <TableCell align=\"left\" onClick={() => additem(row.prodID,row.prodprice,row.prodname)}><img src={add} width='17px' height='17px'></img></TableCell>\r\n              <TableCell align=\"left\" onClick={() => subtractitem(row.prodID,row.prodprice)}><img src={subtract} width='17px' height='17px'></img></TableCell>\r\n              \r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n\r\n\r\n                \r\n                    \r\n                <div>\r\n               <br></br> <h3>Total Price:${aPPLContext.TotalPrice.toFixed(2)}</h3>\r\n\r\n               <br></br>\r\n               <h5>Transactional component would go here - call financial institution track order </h5>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutSummaryScreen\r\n","\nimport './App.css';\nimport React, {useState,useContext} from 'react';\nimport Header from './components/Header'\nimport ProductList from'./components/ProductList'\nimport { Switch, Route } from 'react-router-dom';\nimport Homescreen from './components/Homescreen'\nimport ProductDetailScreen from './components/ProductDetailScreen'\nimport LeftSideBarFilter from './components/LeftSideBarFilter'\n\nimport CheckoutSummaryScreen from './components/CheckoutSummaryScreen'\nimport MasterDataDetailList from './json/MasterDetailListInfo.json'\n\n//init all global variables for the web application\nexport const APPLContext = React.createContext({\n checkboxes:[],\n\n ConList:'',\n cartcounter:0,\n cartitems:[],\n LoadStarSwitch:true,\n checkboxarray:[],\n TotalPrice:0,\n sidenavidname:'mySidenav',\n ShowNoShowProductlist:'Products-Container',\n ShowNoShowProductDetail:'Detail-Product-info',\n ShowNoShowcheckoutcontainer:'checkoutListContainer',\n ShowNoShowHomeScreen:'homescreen-container-details',\n ShowNoShowApprootScreen:'root-app',\n  ChangeConList: ()  => {},\n  Changecartitems: ()  => {},\n  Changecartcounter: ()  => {},\n  ChangeLoadStarSwitch: ()  => {},\n  Changecheckboxarray: ()  => {},\n  ChangeTotalPrice: ()  => {},\n  Changesidenavidname: ()  => {}, \n  ChangeShowNoShowProductlist: ()  => {},\n  ChangeShowNoShowProductDetail: ()  => {},\n  ChangeShowNoShowcheckoutcontainer: ()  => {},\n  ChangeShowNoShowHomeScreen: ()  => {},\n  ChangeShowNoShowApprootScreen: ()  => {},\n  Changecheckboxes: ()  => {},\n });\n\n\nfunction App() {\n  const [ConList, setConList] = useState(MasterDataDetailList)\n  const [cartitems, setcartitems] = useState([])\n  const [cartcounter, setcartcounter] = useState(0)\n  const [LoadStarSwitch, setLoadStarSwitch] = useState(true)\n  const [checkboxarray, setcheckboxarray] = useState([])\n  const [TotalPrice, setTotalPrice] = useState(0)\n  const [sidenavidname, setsidenavidname] = useState('mySidenav')\n  const [ShowNoShowProductlist, setShowNoShowProductlist] = useState('dontshow')\n  const [ShowNoShowProductDetail, setShowNoShowProductDetail] = useState('Detail-Product-info')\n  const [ShowNoShowcheckoutcontainer, setShowNoShowcheckoutcontainer] = useState('checkoutListContainer')\n  const [ShowNoShowHomeScreen, setShowNoShowHomeScreen] = useState('homescreen-container-details')\n  const [ShowNoShowApprootScreen, setShowNoShowApprootScreen] = useState('root-app')\n  \n  const [checkboxes, setcheckboxes] = useState({\n        Accessories: true,\n        Bikes: true,\n        Clothing: false,\n        Components: false,\n      });\n\n\n  \n  return (\n    <APPLContext.Provider value = {{\n      ConList,\n      cartitems,\n      cartcounter,\n      LoadStarSwitch,\n      checkboxarray,\n      TotalPrice,\n      sidenavidname,\n      ShowNoShowProductlist,\n      ShowNoShowProductDetail,\n      ShowNoShowcheckoutcontainer,\n      ShowNoShowHomeScreen,\n      ShowNoShowApprootScreen,\n      checkboxes,\n\n      ChangeConList: ConList => setConList(ConList),\n      Changecartitems: cartitems => setcartitems(cartitems),\n      Changecartcounter: cartcounter => setcartcounter(cartcounter),\n      ChangeLoadStarSwitch: LoadStarSwitch => setLoadStarSwitch(LoadStarSwitch),\n      Changecheckboxarray: checkboxarray => setcheckboxarray(checkboxarray),\n      ChangeTotalPrice: TotalPrice => setTotalPrice(TotalPrice),\n      Changesidenavidname: sidenavidname => sidenavidname(sidenavidname),\n      ChangeShowNoShowProductlist: ShowNoShowProductlist => setShowNoShowProductlist(ShowNoShowProductlist),\n      ChangeShowNoShowProductDetail: ShowNoShowProductDetail => setShowNoShowProductDetail(ShowNoShowProductDetail),\n      ChangeShowNoShowcheckoutcontainer: ShowNoShowcheckoutcontainer => setShowNoShowcheckoutcontainer(ShowNoShowcheckoutcontainer),\n      ChangeShowNoShowHomeScreen: ShowNoShowHomeScreen => setShowNoShowHomeScreen(ShowNoShowHomeScreen),\n      ChangeShowNoShowApprootScreen: ShowNoShowApprootScreen => setShowNoShowApprootScreen(ShowNoShowApprootScreen),\n     \n      Changecheckboxes: checkboxes => setcheckboxes(checkboxes),\n     \n      \n      }}>\n    <div className=\"App\">\n            <div className={ShowNoShowApprootScreen} >\n                        <Header/>\n                        <LeftSideBarFilter/>\n                        <Homescreen/>\n                        <ProductList/>\n              </div>\n              hi there\n      <Switch>\n      <Route exact path='/'  component={Homescreen}/>\n      <Route exact path='/component/:id'  component={ProductDetailScreen}/>\n      <Route exact path='/component' component={CheckoutSummaryScreen}/>\n      \n    </Switch>\n      \n      \n    \n     \n    </div>\n    </APPLContext.Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n     \n     <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}